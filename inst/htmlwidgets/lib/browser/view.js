'use strict';

// Generated by CoffeeScript 2.3.1
(function () {
  // --- ArtifactView -----------------------------------------------------
  var ArtifactView, TextTreeView;

  ArtifactView = function ArtifactView(external, model) {
    var artifactView, container, initiate, templateUrl;
    container = $('<div>', {
      class: 'artifact-view'
    }).appendTo(external);
    templateUrl = $("#browser-1-attachment").attr("href");
    initiate = function initiate() {
      var element;
      element = $("<div>");
      return element.load(templateUrl, null, function () {
        element.find(".name").text(model.name);
        element.find(".description").text(model.description);
        element.find("code").text(model.expression).each(function (i, block) {
          return hljs.highlightBlock(block);
        });
        return element.find('.code-block').addClass('invisible');
      });
    };
    //element.
    artifactView = function artifactView() {};
    return artifactView.keypressEnter = function () {
      return container.find('.selected').find('.code-block').toggleClass('invisible');
    };
  };

  // --- TextTreeView -----------------------------------------------------
  TextTreeView = function TextTreeView(external, model) {
    var artifactDescription, container, flatView, listBasedView, selectArtifact, textTreeView;
    container = $('<div>', {
      class: 'tree-view'
    }).appendTo(external);
    textTreeView = function textTreeView() {};
    // --- refresh view ---------------------------------------------------
    textTreeView.refresh = function () {
      if (false) {
        return listBasedView();
      } else {
        return flatView();
      }
    };
    // --- creates a number of nested, unordered lists
    listBasedView = function listBasedView() {
      var htmlChildren, htmlSelf, root, topUl, visit;
      visit = function visit(node, parent) {
        node.htmlSelf = $('<li>').appendTo(parent.htmlChildren);
        return node.htmlChildren = $('<ul>').appendTo(node.htmlSelf);
      };
      topUl = $('<ul>').appendTo(container);
      htmlSelf = $('<li>').appendTo(topUl);
      htmlChildren = $('<ul>').appendTo(htmlSelf);
      root = {
        htmlChildren: topUl
      };
      return model.traverseAsTree(visit, {
        htmlChildren: htmlChildren
      });
    };
    // --- creates a <div> for each data element, they are all assigned
    //     to the main container
    flatView = function flatView() {
      var create;
      create = function create(node, parent) {
        node.left = parent.left + 20;
        return node.element = $('<div>', {
          class: 'flat-artifact'
        }).css({
          left: node.left
        }).on('click', node, selectArtifact).appendTo(container).append(artifactDescription(node));
      };
      return model.traverseAsTree(create, {
        left: 0
      });
    };

    // --- loads and fills artifact detailed description
    artifactDescription = function artifactDescription(a) {
      return element;
    };
    // --- interactions ---------------------------------------------------
    textTreeView.keyboardSignal = function (key) {
      // TODO up/down - walk the list
      // TODO left/right - walk the tree
      if (key === 'enter') {
        return true;
      }
    };
    selectArtifact = function selectArtifact(event) {
      container.find('.flat-artifact').removeClass('selected');
      return $(this).addClass('selected');
    };
    // --- return the view object -----------------------------------------
    log.debug('created view');
    return textTreeView;
  };

  // --- exports ----------------------------------------------------------
  window.TextTreeView = TextTreeView;
}).call(undefined);